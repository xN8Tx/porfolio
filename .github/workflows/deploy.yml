name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          cd app/client 
          yarn
      - name: Linting
        run: |
          cd app/client 
          yarn lint

  testing:
    runs-on: ubuntu-latest
    needs: linting
    env:
      NEXT_PUBLIC_STRAPI_URL: http://localhost:1337
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          cd app/client 
          yarn install
      - name: Testing
        run: |
          cd app/client 
          yarn test

  visualTesting:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd app/client
          yarn
          yarn add http-server

      - name: Start Storybook
        run: |
          cd app/client
          yarn storybook:build 
          npx http-server storybook-static -p 6006 &

      - name: Waiting Storybook server
        run: npx wait-on http://localhost:6006

      - name: Start BackstopJS
        run: |
          cd app/client
          npx backstop test || (echo "BackstopJS find differences!" && exit 1)

      - name: Save artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: backstop-diff
          path: backstop_data

  building:
    runs-on: ubuntu-latest
    needs: visualTesting
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          npm install typescript --global
          cd app/client 
          yarn install
          cd ../strapi
          yarn install
      - name: Build
        run: |
          cd app/client 
          npx tsc
          cd ../strapi
          yarn tsc

  deploy:
    runs-on: ubuntu-latest
    needs: building
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH-ключа
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            git reset --hard origin/main  
            git pull origin main          
            chmod +x start.sh             
            ./start.sh 
          EOF
